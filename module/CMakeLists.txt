cmake_minimum_required(VERSION 3.2)
project(GameModule CXX)
set(OUTPUT_NAME "nomercy_game_module_x${TARGET_ARCH_STR}_${CMAKE_CXX_COMPILER_ID}")

file(GLOB GameModule_HEADERS
    "${PROJECT_SOURCE_DIR}/include/*.h"
    "${PROJECT_SOURCE_DIR}/include/*.hpp"
)
file(GLOB GameModule_SOURCES
    "${PROJECT_SOURCE_DIR}/src/*.cpp"
)

add_library(${OUTPUT_NAME} SHARED ${GameModule_HEADERS} ${GameModule_SOURCES})

set_property(TARGET ${OUTPUT_NAME} PROPERTY CXX_STANDARD 17)
set_property(TARGET ${OUTPUT_NAME} PROPERTY CXX_STANDARD_REQUIRED ON)
set_property(TARGET ${OUTPUT_NAME} PROPERTY CMAKE_CXX_EXTENSIONS OFF)

SET_TARGET_PROPERTIES(${OUTPUT_NAME} PROPERTIES COMPILE_DEFINITIONS "${_definitions}") 
if (CMAKE_CXX_COMPILER_ID MATCHES "Clang" OR "${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
	SET_TARGET_PROPERTIES(${OUTPUT_NAME} PROPERTIES LINK_SEARCH_END_STATIC 1) #STATIC LINKING for clang
	set(CMAKE_EXE_LINK_DYNAMIC_C_FLAGS)       # remove -Wl,-Bdynamic 
	set(CMAKE_EXE_LINK_DYNAMIC_CXX_FLAGS) 
	set(CMAKE_SHARED_LIBRARY_C_FLAGS)         # remove -fPIC 
	set(CMAKE_SHARED_LIBRARY_CXX_FLAGS) 
	set(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS)    # remove -rdynamic 
	set(CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS) 
endif()

target_link_libraries(${OUTPUT_NAME} ${BIN_EXTRA_LIBS})
